#!/bin/sh /etc/rc.common

START=15

ram_getsize()
{
	local line
	while read line; do case "$line" in MemTotal:*) set $line; echo "$2"; break ;; esac; done </proc/meminfo
}
zram_getsize()	# in megabytes
{
	local zram_size="$( uci -q get system.@system[0].zram_size_mb )"
	local ram_size="$( ram_getsize )"
	if [ -z "$zram_size" ]; then
		# e.g. 6mb for 16mb-routers or 61mb for 128mb-routers
		echo $(( ram_size / 2048 ))
	else
		echo "$zram_size"
	fi
}
zram_applicable()
{
	local zram_dev="$1"
	[ -e "$zram_dev" ] || {
		logger -s -t zram_applicable -p daemon.crit "[ERROR] device '$zram_dev' not found"
		return 1
	}
	[ -x /sbin/mkswap ] || {
		logger -s -t zram_applicable -p daemon.err "[ERROR] 'BusyBox mkswap' not installed"
		return 1
	}
	[ -x /sbin/swapon ] || {
		logger -s -t zram_applicable -p daemon.err "[ERROR] 'BusyBox swapon' not installed"
		return 1
	}
	[ -x /sbin/swapoff ] || {
		logger -s -t zram_applicable -p daemon.err "[ERROR] 'BusyBox swapoff' not installed"
		return 1
	}
}
zram_dev()
{
	local idx="$1"
	echo "/dev/zram${idx:-0}"
}
zram_reset()
{
	local dev="$1"
	local message="$2"
	local proc_entry="/sys/block/$( basename "$dev" )/reset"
	logger -s -t zram_reset -p daemon.debug "$message via $proc_entry"
	echo "1" >"$proc_entry"
}
zram_getdev()
{
	#get unallocated zram dev
	local zdev=$( zram_dev )
	if [ "$(mount | grep $zdev)" ]; then
		local idx=$(cat /sys/class/zram-control/hot_add)
		zdev="$( zram_dev $idx )"
	fi
	echo $zdev
}

start()
{
	[ -e /proc/swaps ] || {
		logger -s -t zram_start -p daemon.crit "kernel doesn't support swap"
		return 1
	}
	if [ $( grep -cs zram /proc/swaps ) -ne 0 ]; then
		logger -s -t zram_start -p daemon.notice "[OK] zram swap is already mounted"
		return 1
	fi
	local zram_size="$( zram_getsize )"
	local zram_dev="$( zram_getdev )"
	zram_applicable "$zram_dev" || return 1
	local zram_priority="$( uci -q get system.@system[0].zram_priority )"
	zram_priority=${zram_priority:+-p $zram_priority}
	logger -s -t zram_start -p daemon.debug "activating '$zram_dev' for swapping ($zram_size MegaBytes)"
	zram_reset "$zram_dev" "enforcing defaults"
	echo $(( $zram_size * 1024 * 1024 )) >"/sys/block/$( basename "$zram_dev" )/disksize"
	/sbin/mkswap "$zram_dev"
	/sbin/swapon -d $zram_priority "$zram_dev"
}
stop()
{
	local zram_dev
	for zram_dev in $( grep zram /proc/swaps |awk '{print $1}' ); do {
		logger -s -t zram_stop -p daemon.debug "deactivate swap $zram_dev"
		/sbin/swapoff "$zram_dev" && zram_reset "$zram_dev" "claiming memory back"
		local dev_index="$( echo $zram_dev | grep -o "[0-9]*$" )"
		if [ $dev_index -ne 0 ]; then
			logger -s -t zram_stop -p daemon.debug "removing zram $zram_dev"
			echo $dev_index > /sys/class/zram-control/hot_remove
		fi
	} done
}